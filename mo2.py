# -*- coding: utf-8 -*-
"""
Created on Tue Mar  6 22:35:30 2018

@author: Knowhow
"""

"""
Created on Mon Mar  5 20:27:10 2018

Landau Damping 1D Model Analysis

Author Mohamad Abdallah

@author: ma1439
"""

"""
Initializing data from source code epc1d

I am also initializing a loop command to run 

the program over a defined amount of loops.
"""

from   mo import *
import numpy as np 
from   scipy.signal import argrelextrema

#for z in range 
for x in [10, 200, 50]:
    
        L        = 4.0 * pi
    
        pos, vel = landau(100, L)
    
        s        = Summary()
    
        run(pos, vel, L, x, [s], linspace(0.0, 20.0, 50.0))
    
        """
        This line of code produces a text log of raw data generated by running the 
    
        epc1d code. Each run produces a texxt file with raw data to be read in at a 
    
        later stage using another program.
        """
        np.savetxt('Text Logs/Raw_data{i}'.format(i=x+1), (s.firstharmonic), delimiter=' ')
        np.savetxt('Text Logs/Raw_time{i}'.format(i=x+1), (s.t), delimiter=' ')
  

print ("Raw data has been loaded analysis function will now begin")


"============================================================================="
"============================================================================="


for y in range (1):
    Noise            = []
    MaxPeak          = []
    MinPeak          = []
    Loaded_Raw_Data  = []
    Loaded_Time_Data = []
    ArrayofPeaks     = []
    ArrayofTimes     = [] 
    Loaded_Raw_Data  = np.loadtxt('Text Logs/Raw_data{i}'.format(i=y+1))
    Loaded_Time_Data = np.loadtxt('Text Logs/Raw_time{i}'.format(i=y+1))
    
    """
    The above code reads time data and first harmonic data into two new arrays

    called Loaded_Time_Data and Loaded_Raw_Data, these arrays contain the data for

    each individual run of define loop from x in defined range
    """
    Peaks = argrelextrema(np.array(Loaded_Raw_Data), np.greater)[0]
    
    """
    The above function argrelextrema finds the highest peak point in the array
    
    defined, which in this case is Loaded_Raw_Data. The returned values are defined 

    by the Peaks variable
    """

    for i in Peaks:
        ArrayofPeaks.append(Loaded_Raw_Data[i])
        ArrayofTimes.append(Loaded_Time_Data[i])
        
    Stat = False
    for i in range(len(ArrayofPeaks)-1):
        if ArrayofPeaks[i+1] > ArrayofPeaks[i]:
            MaxPeak.append(ArrayofPeaks[i+1:])
            Stat = True
            MinPeak.append(ArrayofPeaks[i])
            break
    if not Stat: MaxPeak.append(ArrayofPeaks[-1])
            
    Noise.append(np.mean(MaxPeak))

AvgNoise = np.mean(Noise)
        
print (AvgNoise)

